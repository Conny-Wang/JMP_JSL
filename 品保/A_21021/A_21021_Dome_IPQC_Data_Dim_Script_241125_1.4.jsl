//!
//更新日期 2024/11/25 新增 B-X 规格
Clear Symbols();
Clear Globals();

NW = Expr(

	New Window( "21021 Dome IPQC Dim", //窗体名称
		Outline Box( "21021A Dome Dim", //分级菜单栏名称
			V List Box( //垂直排列显示框
				H List Box( Text Box( "测试日期	:    " ), Test_Date_BoxA = Text Edit Box( "D", <<Set Width( 100 ) ) ), //A Dome 测试日期
				H List Box( Text Box( "测试时间	:    " ), Test_Time_BoxA = Text Edit Box( "T", <<Set Width( 100 ) ) ),   //A Dome 测试时间
				H List Box( Text Box( "机台编号	:    " ), Machine_BoxA = Text Edit Box( "OMM", <<Set Width( 100 ) ) ),   //A Dome 机台编号
				H List Box( Text Box( "模具编号	:    " ), Tool_BoxA = Text Edit Box( "21021A", <<Set Width( 100 ) ) )    //Tool 型号 大 Dome
			), 
			
			Spacer Box( size( 10, 10 ) ), //保持和其他显示框的间距
			
			//点击按钮可以运行对应的脚本
			Button Box( "生成 A Dome Dim 报表(SPC)", Import_Data_ADome_SPC ), 
			Button Box( "生成 A Dome Dim 报表(FAI)", Import_Data_ADome ), 
			//Button Box( "重新生成 A Dome Dim 图形",A_Dome ),
			Button Box( "保存 A Dome Dim 报表",Save_A_Dome_Dim ),
			
		), 
		
		Spacer Box( size( 10, 10 ) ), //保持和其他显示框的间距
		
		Outline Box( "21021B Dome Dim", //分级菜单栏名称
			V List Box( //垂直排列显示框
				H List Box( Text Box( "测试日期	:    " ), Test_Date_BoxB = Text Edit Box( "D", <<Set Width( 100 ) ) ), //B Dome 测试日期
				H List Box( Text Box( "测试时间	:    " ), Test_Time_BoxB = Text Edit Box( "T", <<Set Width( 100 ) ) ),   //B Dome 测试时间
				H List Box( Text Box( "机台编号	:    " ), Machine_BoxB = Text Edit Box( "OMM", <<Set Width( 100 ) ) ),   //B Dome 机台编号
				H List Box( Text Box( "模具编号	:    " ), Tool_BoxB = Text Edit Box( "21021B", <<Set Width( 100 ) ) )    //Tool 型号 小 Dome
				
			), 	
			
			Spacer Box( size( 10, 10 ) ), //保持和其他显示框的间距
			
			//点击按钮可以运行对应的脚本
			Button Box( "生成 B Dome Dim 报表(SPC)", Import_Data_BDome_SPC ), 
			Button Box( "生成 B Dome Dim 报表(FAI)", Import_Data_BDome ), 
			//Button Box( "重新生成 B Dome Dim 图形",B_Dome ),
			Button Box( "保存 B Dome Dim 报表",Save_B_Dome_Dim ),
		
		), 

	)
);

//设置窗体大小 移动窗体位置
NW << Set Window Size( 260, 600 ) << Move window( 1600, 100 );

 //引用规格表
Include("./A_21021_Dome_IPQC_SPEC.jsl");

 //==================================================
 //大 Dome 生成报表
//导入 A Dome SE 数据
Import_Data_ADome  =  Expr(

// A Dome 测试日期
Test_DateA = Test_Date_BoxA << Get Text();
// A Dome 测试时间
Test_TimeA = Test_Time_BoxA << Get Text();
// A Dome 机台编号
Machine_A = Machine_BoxA << Get Text();
//A Dome 模号
Tool_A = Tool_BoxA << Get Text();

//判断桌面是否有  21021_IPQC_Data  文件
IPQC_Data_Dir = Is Directory("$Desktop\21021_IPQC_Data_source");
//如果没有就创建一个 21021_IPQC_Data  文件夹
if (IPQC_Data_Dir  == 0,
Create Directory("$Desktop\21021_IPQC_Data_source" ));
//设置桌面 JMP 文件夹为默认目录
Path = Set Default Directory("$Desktop\21021_IPQC_Data_source");

//批量导入需要合并的文件，默认参数，JMP 自动推导，可手动配置参数。
mfi = Multiple File Import();
//设置导入目录
mfi << Set Folder(Path);
//设置导入的编码为中文字体
mfi<<Set Charset( "gb2312" );
//批量导入
mfi << Import Data();

//获取已经开的所有表数量
open_tables = N Table();

//判断数据是否合并为 1 个，如果不是说明数据格式一致。
//如果合并发现多余2个表弹窗提醒并停止下面代码继续执行。
if (open_tables>1,
    win = New Window( "错误提示",
    <<Modal,
    Text Box( "请检查数据\!r数据格式不一致" ),
    Button Box( "OK" ),);
    Stop(),
);

//导入后定义当前活动表为 datatable
dt = Current Data Table();

//判断有没有活动表,如果没有停止运行
if (
	Is Empty(dt),
	win = New Window( "错误提示",
    <<Modal,
    Text Box( "桌面  21021_IPQC_Data_source 文件夹\!n为空请检查文件！" ),
    Button Box( "OK" ),);
	Stop();
);

//删除前三行
//dt << Select Rows( [1, 2, 3] );
 dt << Select Where( :项目 == "规格上限" | :项目 == "规格下限" | :项目 == "目标值" );
dt << Delete Rows();

//改名并删除数据表的脚本
dt << Set name("21021 IPQC Dome Dim Data");
Script_list = dt << Get Table Script Names;
dt << Delete Scripts( Script_list );

//删除第一列
dt << Delete Columns(1);

//新建 9 列存放数据
dt = Current Data Table();
colsnum = 8;
For( i = 1, i <= colsnum, i++,
	New Column( Char( i ), Character, "Nominal",Set Selected )
);

//移动 1-8 列到最前面
dt << Move Selected Columns(
	{:"1"n, :"2"n, :"3"n, :"4"n, :"5"n, :"6"n, :"7"n, :"8"n},
	To First
);

//新建一列数字列，用于存放 PF_Mean
 dt << New Column( "9",Numeric,"Continuous",);
 
//重命名列名称
NewCols = {"Test Date", "Test Time", "Dome Type", "Equipment_Number",
    "Tool","Slide","Block","Cavity","FAI 1","FAI 2","FAI 4","FAI 3","FAI 5","FAI 9",
    "FAI 15","FAI 16","FAI 7-1","FAI 7-2","Offset"
};
//循环改列名
For( i = 1, i <= N Items( NewCols ), i++,
 Column( dt, i ) << set name( NewCols[i] )
);

//写入大 Dome 测试日期
dt:Test Date << Set Each Value(Test_DateA);
//写入大 Dome 测试时间
dt:Test Time << Set Each Value(Test_TimeA);
//写入大 Dome Type
dt:Dome Type << Set Each Value("21021A");
//写入大 Dome 机台编号
dt:Equipment_Number << Set Each Value(Machine_A);
//写入大 Dome 摸具编号
dt:Tool << Set Each Value(Tool_A);
//写入大 Dome Block 信息 144 行
Block_Area = Repeat( {"A","B","C","D","E","F","G","H"}, 6 );
Block_Area = Sort List(Block_Area);
dt:Block << Set  Values(	Block_Area);
//写入大 Dome CAV 144 行
CAV_Area = Repeat( {"CAV 006","CAV 055","CAV 089","CAV 116","CAV 165","CAV 199"}, 8 );
dt:Cavity << Set  Values(CAV_Area);
//设置 Offset 公式
dt:Offset << Set Formula(
	Round( Abs( :"FAI 7-1"n - :"FAI 7-2"n ), 4 )
);

//清除列选择状态
dt << Clear Column Selection();

//运行 A_Dome 图形脚本
A_Dome;

//保存 A_Dome 报表
//Save_A_Dome_Force;

//A_Dome 判断是否超规
A_Dome_Tips;

);

//A_Dome 拉图
A_Dome =  Expr(

//判断是否有表存在，不存在停止运行！
If( 
	N Table() == 0, win = New Window( "错误提示",
    <<Modal,
    Text Box( "未打开数据表！停止\!n生成图形！" ),
    Button Box( "OK" ),);
	Stop();
	);
	
  A_Dome_Graph = Graph Builder(
	Size( 1145, 626 ),
	Variables( Y( :FAI 1 ), Y( :FAI 3 ), Y( :Offset ) ),
	Elements(
		Position( 1, 1 ),
		Points( Y, Legend( 7 ) ),
		Caption Box( Y, Legend( 10 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 14 ), Summary Statistic( "Min" ) )
	),
	Elements(
		Position( 1, 2 ),
		Points( Y, Legend( 8 ) ),
		Caption Box( Y, Legend( 11 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 15 ), Summary Statistic( "Min" ) )
	),
	Elements(
		Position( 1, 3 ),
		Points( Y, Legend( 9 ) ),
		Formula( Y, Legend( 12 ) ),
		Caption Box( Y, Legend( 13 ), Summary Statistic( "Max" ) )
	),
	SendToReport(
		Dispatch(
			{},
			"FAI 1",
			ScaleBox,
			{Min( 1.84491228070175 ), Max( 1.96491228070175 ), Inc( 0.01 ),
			Minor Ticks( 1 ), Add Ref Line(
				1.86, "Solid", "Medium Dark Blue", "LCL 1.86", 1
			), Add Ref Line( 1.94, "Solid", "Medium Dark Red", "UCL 1.94", 1 )}
		),
		Dispatch(
			{},
			"FAI 3",
			ScaleBox,
			{Min( 0.515714285714286 ), Max( 0.595714285714286 ), Inc( 0.01 ),
			Minor Ticks( 1 ), Add Ref Line(
				0.52, "Solid", "Medium Dark Blue", "LCL 0.52", 1
			), Add Ref Line( 0.58, "Solid", "Medium Dark Red", "UCL 0.58", 1 )}
		),
		Dispatch(
			{},
			"Offset",
			ScaleBox,
			{Format( "Best", 12 ), Min( -0.00368825191751427 ),
			Max( 0.090600804075492 ), Inc( 0.02 ), Minor Ticks( 1 ),
			Add Ref Line( 0.08, "Solid", "Medium Dark Red", "UCL 0.08", 1 )}
		),
		Dispatch( {}, "graph title", TextEditBox, {Set Text( "大 Dome" )} )
	)
);

//最大化图形窗口，并设置为顶级窗口。
 A_Dome_Graph << Maximize Window;
 A_Dome_Graph << Bring Window To Front;
 
 );
 
A_Dome_Tips = Expr(

//大 Dome 获取最大值和最小值

L_FAI1_Max = Col Maximum(:FAI 1);
L_FAI1_Min = Col Minimum(:FAI 1);

L_FAI2_Max = Col Maximum(:FAI 2);
L_FAI2_Min = Col Minimum(:FAI 2);

L_FAI3_Max = Col Maximum(:FAI 3);
L_FAI3_Min = Col Minimum(:FAI 3);

L_FAI4_Max = Col Maximum(:FAI 4);
L_FAI4_Min = Col Minimum(:FAI 4);

L_FAI5_Max = Col Maximum(:FAI 5);
L_FAI5_Min = Col Minimum(:FAI 5);

L_FAI9_Max = Col Maximum(FAI 9);
L_FAI9_Min = Col Minimum(:FAI 9);

L_FAI15_Max = Col Maximum(FAI 15);
L_FAI15_Min = Col Minimum(:FAI 15);

L_FAI16_Max = Col Maximum(:FAI 15);
L_FAI16_Min = Col Minimum(:FAI 15);

L_Offset_Max = Col Maximum( :Offset );

//大 Dome 规格判断

//FAI1
If(
	L_FAI1_Max > L_USL_FAI_1,
	L_FAI1_H = "FAI 1 High 最大值：" ||  Char(L_FAI1_Max),
	L_FAI1_H = "OK",
);

If(
	L_FAI1_Min < L_LSL_FAI_1,
	L_FAI1_L = "FAI 1 Low 最小值：" ||  Char(L_FAI1_Min),
	L_FAI1_L = "OK",
);

//FAI2
If(
	L_FAI2_Max > L_USL_FAI_2,
	L_FAI2_H = "FAI 2 High 最大值：" ||  Char(L_FAI2_Max),
	L_FAI2_H = "OK",
);

If(
	L_FAI2_Min < L_LSL_FAI_2,
	L_FAI2_L = "FAI 2 Low 最小值：" ||  Char(L_FAI2_Min),
	L_FAI2_L = "OK",
);

//FAI3
If(
	L_FAI3_Max > L_USL_FAI_3,
	L_FAI3_H = "FAI 3 High 最大值：" ||  Char(L_FAI3_Max),
	L_FAI3_H = "OK",
);

If(
	L_FAI3_Min < L_LSL_FAI_3,
	L_FAI3_L = "FAI 3 Low 最小值：" ||  Char(L_FAI3_Min),
	L_FAI3_L = "OK",
);

//FAI4
If(
	L_FAI4_Max > L_USL_FAI_4,
	L_FAI4_H = "FAI 4 High 最大值：" ||  Char(L_FAI4_Max),
	L_FAI4_H = "OK",
);

If(
	L_FAI4_Min < L_LSL_FAI_4,
	L_FAI4_L = "FAI 4 Low 最小值：" ||  Char(L_FAI4_Min),
	L_FAI4_L = "OK",
);

//FAI5
If(
	L_FAI5_Max > L_USL_FAI_5,
	L_FAI5_H = "FAI 5 High 最大值：" ||  Char(L_FAI5_Max),
	L_FAI5_H = "OK",
);

If(
	L_FAI5_Min < L_LSL_FAI_5,
	L_FAI5_L = "FAI 5 Low 最小值：" ||  Char(L_FAI5_Min),
	L_FAI5_L = "OK",
);

//FAI9
If(
	L_FAI9_Max > L_USL_FAI_9,
	L_FAI9_H = "FAI 9 High 最大值：" ||  Char(L_FAI9_Max),
	L_FAI9_H = "OK",
);

If(
	L_FAI9_Min < L_LSL_FAI_9,
	L_FAI9_L = "FAI 9 Low 最小值：" ||  Char(L_FAI9_Min),
	L_FAI9_L = "OK",
);

//FAI15
If(
	L_FAI15_Max > L_USL_FAI_15,
	L_FAI15_H = "FAI 15 High 最大值：" ||  Char(L_FAI15_Max),
	L_FAI15_H = "OK",
);

If(
	L_FAI15_Min < L_LSL_FAI_15,
	L_FAI15_L = "FAI 15 Low 最小值：" ||  Char(L_FAI15_Min),
	L_FAI15_L = "OK",
);

//FAI6
If(
	L_FAI16_Max > L_USL_FAI_16,
	L_FAI16_H = "FAI 16 High 最大值：" ||  Char(L_FAI16_Max),
	L_FAI16_H = "OK",
);

If(
	L_FAI16_Min < L_LSL_FAI_16,
	L_FAI16_L = "FAI 16 Low 最小值：" ||  Char(L_FAI16_Min),
	L_FAI16_L = "OK",
);

//Offset
If(
	L_Offset_Max > L_USL_Offset,
	L_Offset_H = "Offset High 最大值：" ||  Char(L_Offset_Max),
	L_Offset_H = "OK",
);

win = New Window( "重要提醒！",
    <<Modal,
    Text Box( 
		Char(L_FAI1_H) || "\!N" || Char(L_FAI1_L) || "\!N" ||
    	Char(L_FAI2_H) ||  "\!N" || Char(L_FAI2_L) || "\!N" ||
    	Char(L_FAI3_H) ||  "\!N" || Char(L_FAI3_L) || "\!N" ||
    	Char(L_FAI4_H) ||  "\!N" || Char(L_FAI4_L) || "\!N" ||
    	Char(L_FAI5_H) ||  "\!N" || Char(L_FAI5_L) || "\!N" ||
    	Char(L_FAI9_H) ||  "\!N" || Char(L_FAI9_L) || "\!N" ||
    	Char(L_FAI15_H) ||  "\!N" || Char(L_FAI15_L) || "\!N" ||
    	Char(L_FAI16_H) ||  "\!N" || Char(L_FAI16_L) || "\!N" ||
    	Char(L_Offset_H)
    ),
    Button Box( "确定" ),);
    
);

Save_A_Dome_Dim = Expr(
dt = Current Data Table();

If( 
	N Table() == 0, win = New Window( "错误提示",
    <<Modal,
    Text Box( "无数据表！\!n停止保存数据表！" ),
    Button Box( "OK" ),);
	Stop();
	);
//A Dome 模号
Tool_A = Tool_BoxA << Get Text();
//保存文件到桌面
 dt << Save(
	"$Desktop/MB+Dome_FAI/JMP21021/Dim/Dome " || Char( Tool_A ) || " IPQC Dim Data " || Char( Test_DateA ) ||
	" " || Substr( Test_TimeA, 1, 3 ) || " " || Char( Today() ) || ".jmp"
);
dt << Save(
	"\\192.168.0.245\品保课\A产品数据\成型IPQC数据\Dome IPQC report_暂存\21021_IPQC_Data_JMP\Dome " || Char( Tool_A ) ||
	" IPQC Dim Data " || Char( Test_DateA ) || " " || Substr( Test_TimeA, 1, 3 ) || " " || Char( Today() ) || ".jmp"
);

Files = Files In Directory( "$Desktop\21021_IPQC_Data_source" );
If( Files != {},
	For( i = 1, i <= N Items( Files ), i++,
		Delete File( "$Desktop\21021_IPQC_Data_source\" || Files[i] )
	);
);

Close All( Data Tables, NoSave );

);


//===================================================

 //小 Dome 生成报表
//导入 B Dome OMM 数据
Import_Data_BDome  =  Expr(

// B Dome 测试日期
Test_DateB = Test_Date_BoxB << Get Text();
// B Dome 测试时间
Test_TimeB = Test_Time_BoxB << Get Text();
// B Dome 机台编号
Machine_B = Machine_BoxB << Get Text();
//B Dome 模号
Tool_B = Tool_BoxB << Get Text();

//判断桌面是否有  21021_IPQC_Data  文件
IPQC_Data_Dir = Is Directory("$Desktop\21021_IPQC_Data_source");
//如果没有就创建一个 21021_IPQC_Data  文件夹
if (IPQC_Data_Dir  == 0,
Create Directory("$Desktop\21021_IPQC_Data_source" ));
//设置桌面 JMP 文件夹为默认目录
Path = Set Default Directory("$Desktop\21021_IPQC_Data_source");

//批量导入需要合并的文件，默认参数，JMP 自动推导，可手动配置参数。
mfi = Multiple File Import();
//设置导入目录
mfi << Set Folder(Path);
//设置导入的编码为中文字体
mfi<<Set Charset( "gb2312" );
//批量导入
mfi << Import Data();

//获取已经开的所有表数量
open_tables = N Table();

//判断数据是否合并为 1 个，如果不是说明数据格式一致。
//如果合并发现多余2个表弹窗提醒并停止下面代码继续执行。
if (open_tables>1,
    win = New Window( "错误提示",
    <<Modal,
    Text Box( "请检查数据\!r数据格式不一致" ),
    Button Box( "OK" ),);
    Stop(),
);

//导入后定义当前活动表为 datatable
dt = Current Data Table();
//判断有没有活动表,如果没有停止运行
if (
	Is Empty(dt),
	win = New Window( "错误提示",
    <<Modal,
    Text Box( "桌面  21021_IPQC_Data_source 文件夹\!n为空请检查文件！" ),
    Button Box( "OK" ),);
	Stop();
);

//删除前三行
//dt << Select Rows( [1, 2, 3] );
 dt << Select Where( :项目 == "规格上限" | :项目 == "规格下限" | :项目 == "目标值" );
dt << Delete Rows();

//改名并删除数据表的脚本
dt << Set name("21021 IPQC Dome Dim Data");
Script_list = dt << Get Table Script Names;
dt << Delete Scripts( Script_list );

//删除第一列
dt << Delete Columns(1);

//新建 9 列存放数据
dt = Current Data Table();
colsnum = 8;
For( i = 1, i <= colsnum, i++,
	New Column( Char( i ), Character, "Nominal",Set Selected )
);

//移动 1-8 列到最前面
dt << Move Selected Columns(
	{:"1"n, :"2"n, :"3"n, :"4"n, :"5"n, :"6"n, :"7"n, :"8"n},
	To First
);

//新建一列数字列，用于存放 PF_Mean
 dt << New Column( "9",Numeric,"Continuous",);
 
//重命名列名称
NewCols = {"Test Date", "Test Time", "Dome Type", "Equipment_Number",
    "Tool","Slide","Block","Cavity","FAI 1","FAI 2","FAI 4","FAI 3","FAI 5","FAI 9",
    "FAI 15","FAI 16","FAI 7-1","FAI 7-2","Offset"
};
//循环改列名
For( i = 1, i <= N Items( NewCols ), i++,
 Column( dt, i ) << set name( NewCols[i] )
);

//写入小 Dome 测试日期
dt:Test Date << Set Each Value(Test_DateB);
//写入小 Dome 测试时间
dt:Test Time << Set Each Value(Test_TimeB);
//写入小 Dome Type
dt:Dome Type << Set Each Value("21021B");
//写入小 Dome 机台编号
dt:Equipment_Number << Set Each Value(Machine_B);
//写入小 Dome 摸具编号
dt:Tool << Set Each Value(Tool_B);
//写入小 Dome Block 信息 144 行
Block_Area = Repeat( {"A","B","C","D","E","F","G","H"}, 6 );
Block_Area = Sort List(Block_Area);
dt:Block << Set  Values(	Block_Area);
//写入大 Dome CAV 144 行
CAV_Area = Repeat( {"CAV 014","CAV 088","CAV 181","CAV 202","CAV 276","CAV 370"}, 8 );
dt:Cavity << Set  Values(CAV_Area);
//设置 Offset 公式
dt:Offset << Set Formula(
	Round( Abs( :"FAI 7-1"n - :"FAI 7-2"n ), 4 )
);

//清除列选择状态
dt << Clear Column Selection();

//运行 A_Dome 图形脚本
B_Dome;

//保存 A_Dome 报表
//Save_A_Dome_Force;

//A_Dome 判断是否超规
B_Dome_Tips;

);

//B_Dome 拉图
B_Dome =  Expr(

//判断是否有表存在，不存在停止运行！
If( 
	N Table() == 0, win = New Window( "错误提示",
    <<Modal,
    Text Box( "未打开数据表！停止\!n生成图形！" ),
    Button Box( "OK" ),);
	Stop();
	);
	
  B_Dome_Graph = Graph Builder(
	Size( 1100, 626 ),
	Variables( Y( :FAI 1 ), Y( :FAI 3 ), Y( :Offset ) ),
	Elements(
		Position( 1, 1 ),
		Points( Y, Legend( 7 ) ),
		Caption Box( Y, Legend( 10 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 14 ), Summary Statistic( "Min" ) )
	),
	Elements(
		Position( 1, 2 ),
		Points( Y, Legend( 8 ) ),
		Caption Box( Y, Legend( 11 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 15 ), Summary Statistic( "Min" ) )
	),
	Elements(
		Position( 1, 3 ),
		Points( Y, Legend( 9 ) ),
		Formula( Y, Legend( 12 ) ),
		Caption Box( Y, Legend( 13 ), Summary Statistic( "Max" ) )
	),
	SendToReport(
		Dispatch(
			{},
			"FAI 1",
			ScaleBox,
			{Min( 1.84524590163934 ), Max( 1.96524590163934 ), Inc( 0.01 ),
			Minor Ticks( 1 ), Add Ref Line(
				1.86, "Solid", "Medium Dark Blue", "LCL 1.86", 1
			), Add Ref Line( 1.94, "Solid", "Medium Dark Red", "UCL 1.94", 1 )}
		),
		Dispatch(
			{},
			"FAI 3",
			ScaleBox,
			{Min( 0.545274725274725 ), Max( 0.625274725274725 ), Inc( 0.01 ),
			Minor Ticks( 1 ), Add Ref Line(
				0.55, "Solid", "Medium Dark Blue", "LCL 0.55", 1
			), Add Ref Line( 0.61, "Solid", "Medium Dark Red", "UCL 0.61", 1 )}
		),
		Dispatch(
			{},
			"Offset",
			ScaleBox,
			{Min( -0.00946696435996356 ), Max( 0.0916069204572558 ), Inc( 0.01 ),
			Minor Ticks( 1 ), Add Ref Line(
				0.08, "Solid", "Medium Dark Red", "UCL 0.08", 1
			)}
		),
		Dispatch( {}, "graph title", TextEditBox, {Set Text( "小 Dome" )} )
	)
	
);

//最大化图形窗口，并设置为顶级窗口。
 B_Dome_Graph << Maximize Window;
 B_Dome_Graph << Bring Window To Front;
 
 );
 
B_Dome_Tips = Expr(

//大 Dome 获取最大值和最小值

S_FAI1_Max = Col Maximum(:FAI 1);
S_FAI1_Min = Col Minimum(:FAI 1);

S_FAI2_Max = Col Maximum(:FAI 2);
S_FAI2_Min = Col Minimum(:FAI 2);

S_FAI3_Max = Col Maximum(:FAI 3);
S_FAI3_Min = Col Minimum(:FAI 3);

S_FAI4_Max = Col Maximum(:FAI 4);
S_FAI4_Min = Col Minimum(:FAI 4);

S_FAI5_Max = Col Maximum(:FAI 5);
S_FAI5_Min = Col Minimum(:FAI 5);

S_FAI9_Max = Col Maximum(FAI 9);
S_FAI9_Min = Col Minimum(:FAI 9);

S_FAI15_Max = Col Maximum(FAI 15);
S_FAI15_Min = Col Minimum(:FAI 15);

S_FAI16_Max = Col Maximum(:FAI 15);
S_FAI16_Min = Col Minimum(:FAI 15);

S_Offset_Max = Col Maximum( :Offset );

//小 Dome 规格判断

//判断 B-X FAI

If(Tool_B == "21021BX",
	S_LSL_FAI_3 = S_LSL_FAI_3_BX	
);


//FAI1
If(
	S_FAI1_Max > S_USL_FAI_1,
	S_FAI1_H = "FAI 1 High 最大值：" ||  Char(S_FAI1_Max),
	S_FAI1_H = "OK",
);

If(
	S_FAI1_Min < S_LSL_FAI_1,
	S_FAI1_L = "FAI 1 Low 最小值：" ||  Char(S_FAI1_Min),
	S_FAI1_L = "OK",
);

//FAI2
If(
	S_FAI2_Max > S_USL_FAI_2,
	S_FAI2_H = "FAI 2 High 最大值：" ||  Char(S_FAI2_Max),
	S_FAI2_H = "OK",
);

If(
	S_FAI2_Min < S_LSL_FAI_2,
	S_FAI2_L = "FAI 2 Low 最小值：" ||  Char(S_FAI2_Min),
	S_FAI2_L = "OK",
);

//FAI3
If(
	S_FAI3_Max > S_USL_FAI_3,
	S_FAI3_H = "FAI 3 High 最大值：" ||  Char(S_FAI3_Max),
	S_FAI3_H = "OK",
);

If(
	S_FAI3_Min < S_LSL_FAI_3,
	S_FAI3_L = "FAI 3 Low 最小值：" ||  Char(S_FAI3_Min),
	S_FAI3_L = "OK",
);

//FAI4
If(
	S_FAI4_Max > S_USL_FAI_4,
	S_FAI4_H = "FAI 4 High 最大值：" ||  Char(S_FAI4_Max),
	S_FAI4_H = "OK",
);

If(
	S_FAI4_Min < S_LSL_FAI_4,
	S_FAI4_L = "FAI 4 Low 最小值：" ||  Char(S_FAI4_Min),
	S_FAI4_L = "OK",
);

//FAI5
If(
	S_FAI5_Max > S_USL_FAI_5,
	S_FAI5_H = "FAI 5 High 最大值：" ||  Char(S_FAI5_Max),
	S_FAI5_H = "OK",
);

If(
	S_FAI5_Min < S_LSL_FAI_5,
	S_FAI5_L = "FAI 5 Low 最小值：" ||  Char(S_FAI5_Min),
	S_FAI5_L = "OK",
);

//FAI9
If(
	S_FAI9_Max > S_USL_FAI_9,
	S_FAI9_H = "FAI 9 High 最大值：" ||  Char(S_FAI9_Max),
	S_FAI9_H = "OK",
);

If(
	S_FAI9_Min < S_LSL_FAI_9,
	S_FAI9_L = "FAI 9 Low 最小值：" ||  Char(S_FAI9_Min),
	S_FAI9_L = "OK",
);

//FAI15
If(
	S_FAI15_Max > S_USL_FAI_15,
	S_FAI15_H = "FAI 15 High 最大值：" ||  Char(S_FAI15_Max),
	S_FAI15_H = "OK",
);

If(
	S_FAI15_Min < S_LSL_FAI_15,
	S_FAI15_L = "FAI 15 Low 最小值：" ||  Char(S_FAI15_Min),
	S_FAI15_L = "OK",
);

//FAI6
If(
	S_FAI16_Max > S_USL_FAI_16,
	S_FAI16_H = "FAI 16 High 最大值：" ||  Char(S_FAI16_Max),
	S_FAI16_H = "OK",
);

If(
	S_FAI16_Min < S_LSL_FAI_16,
	S_FAI16_L = "FAI 16 Low 最小值：" ||  Char(S_FAI16_Min),
	S_FAI16_L = "OK",
);

//Offset
If(
	S_Offset_Max > S_USL_Offset,
	S_Offset_H = "Offset High 最大值：" ||  Char(S_Offset_Max),
	S_Offset_H = "OK",
);

win = New Window( "重要提醒！",
    <<Modal,
    Text Box( 
		Char(S_FAI1_H) || "\!N" || Char(S_FAI1_L) || "\!N" ||
    	Char(S_FAI2_H) ||  "\!N" || Char(S_FAI2_L) || "\!N" ||
    	Char(S_FAI3_H) ||  "\!N" || Char(S_FAI3_L) || "\!N" ||
    	Char(S_FAI4_H) ||  "\!N" || Char(S_FAI4_L) || "\!N" ||
    	Char(S_FAI5_H) ||  "\!N" || Char(S_FAI5_L) || "\!N" ||
    	Char(S_FAI9_H) ||  "\!N" || Char(S_FAI9_L) || "\!N" ||
    	Char(S_FAI15_H) ||  "\!N" || Char(S_FAI15_L) || "\!N" ||
    	Char(S_FAI16_H) ||  "\!N" || Char(S_FAI16_L) || "\!N" ||
    	Char(S_Offset_H)
    ),
    Button Box( "确定" ),);
    
);

Save_B_Dome_Dim = Expr(
dt = Current Data Table();

If( 
	N Table() == 0, win = New Window( "错误提示",
    <<Modal,
    Text Box( "无数据表！\!n停止保存数据表！" ),
    Button Box( "OK" ),);
	Stop();
	);
	
//B Dome 模号
Tool_B = Tool_BoxB << Get Text();
//保存文件到桌面
 dt << Save(
	"$Desktop/MB+Dome_FAI/JMP21021/Dim/Dome " || Char( Tool_B ) || " IPQC Dim Data " || Char( Test_DateB ) ||
	" " || Substr( Test_TimeB, 1, 3 ) || " " || Char( Today() ) || ".jmp"
);
dt << Save(
	"\\192.168.0.245\品保课\A产品数据\成型IPQC数据\Dome IPQC report_暂存\21021_IPQC_Data_JMP\Dome " || Char( Tool_B ) ||
	" IPQC Dim Data " || Char( Test_DateB ) || " " || Substr( Test_TimeB, 1, 3 ) || " " || Char( Today() ) || ".jmp"
);

Files = Files In Directory( "$Desktop\21021_IPQC_Data_source" );
If( Files != {},
	For( i = 1, i <= N Items( Files ), i++,
		Delete File( "$Desktop\21021_IPQC_Data_source\" || Files[i] )
	);
);

Close All( Data Tables, NoSave );

);


Import_Data_ADome_SPC  =  Expr(

// A Dome 测试日期
Test_DateA = Test_Date_BoxA << Get Text();
// A Dome 测试时间
Test_TimeA = Test_Time_BoxA << Get Text();
// A Dome 机台编号
Machine_A = Machine_BoxA << Get Text();
//A Dome 模号
Tool_A = Tool_BoxA << Get Text();

//判断桌面是否有  21021_IPQC_Data  文件
IPQC_Data_Dir = Is Directory("$Desktop\21021_IPQC_Data_source");
//如果没有就创建一个 21021_IPQC_Data  文件夹
if (IPQC_Data_Dir  == 0,
Create Directory("$Desktop\21021_IPQC_Data_source" ));
//设置桌面 JMP 文件夹为默认目录
Path = Set Default Directory("$Desktop\21021_IPQC_Data_source");

//批量导入需要合并的文件，默认参数，JMP 自动推导，可手动配置参数。
mfi = Multiple File Import();
//设置导入目录
mfi << Set Folder(Path);
//设置导入的编码为中文字体
mfi<<Set Charset( "gb2312" );
//批量导入
mfi << Import Data();

//获取已经开的所有表数量
open_tables = N Table();

//判断数据是否合并为 1 个，如果不是说明数据格式一致。
//如果合并发现多余2个表弹窗提醒并停止下面代码继续执行。
if (open_tables>1,
    win = New Window( "错误提示",
    <<Modal,
    Text Box( "请检查数据\!r数据格式不一致" ),
    Button Box( "OK" ),);
    Stop(),
);

//导入后定义当前活动表为 datatable
dt = Current Data Table();

//判断有没有活动表,如果没有停止运行
if (
	Is Empty(dt),
	win = New Window( "错误提示",
    <<Modal,
    Text Box( "桌面  21021_IPQC_Data_source 文件夹\!n为空请检查文件！" ),
    Button Box( "OK" ),);
	Stop();
);

//删除前三行
//dt << Select Rows( [1, 2, 3] );
 dt << Select Where( :项目 == "规格上限" | :项目 == "规格下限" | :项目 == "目标值" );
dt << Delete Rows();

//改名并删除数据表的脚本
dt << Set name("21021 IPQC Dome Dim Data");
Script_list = dt << Get Table Script Names;
dt << Delete Scripts( Script_list );

//删除第一列
dt << Delete Columns(1);

//新建 9 列存放数据
dt = Current Data Table();
colsnum = 8;
For( i = 1, i <= colsnum, i++,
	New Column( Char( i ), Character, "Nominal",Set Selected )
);

//移动 1-8 列到最前面
dt << Move Selected Columns(
	{:"1"n, :"2"n, :"3"n, :"4"n, :"5"n, :"6"n, :"7"n, :"8"n},
	To First
);

//新建一列数字列，用于存放 PF_Mean
 dt << New Column( "9",Numeric,"Continuous",);
 
//重命名列名称
NewCols = {"Test Date", "Test Time", "Dome Type", "Equipment_Number",
    "Tool","Slide","Block","Cavity","SPC A","SPC C","FAI 7-1","FAI 7-2","SPC G"
};
//循环改列名
For( i = 1, i <= N Items( NewCols ), i++,
 Column( dt, i ) << set name( NewCols[i] )
);

//写入大 Dome 测试日期
dt:Test Date << Set Each Value(Test_DateA);
//写入大 Dome 测试时间
dt:Test Time << Set Each Value(Test_TimeA);
//写入大 Dome Type
dt:Dome Type << Set Each Value("21021A");
//写入大 Dome 机台编号
dt:Equipment_Number << Set Each Value(Machine_A);
//写入大 Dome 摸具编号
dt:Tool << Set Each Value(Tool_A);
//写入大 Dome Block 信息 144 行
Block_Area = Repeat( {"A","B","C","D","E","F","G","H"}, 6 );
Block_Area = Sort List(Block_Area);
dt:Block << Set  Values(	Block_Area);
//写入大 Dome CAV 144 行
CAV_Area = Repeat( {"CAV 006","CAV 055","CAV 089","CAV 116","CAV 165","CAV 199"}, 8 );
dt:Cavity << Set  Values(CAV_Area);
//设置 SPC G 公式
dt:SPC G << Set Formula(
	Round( Abs( :"FAI 7-1"n - :"FAI 7-2"n ), 4 )
);

//清除列选择状态
dt << Clear Column Selection();

//运行 A_Dome 图形脚本
A_Dome_SPC;

//保存 A_Dome 报表
//Save_A_Dome_Force;

//A_Dome 判断是否超规
A_Dome_Tips_SPC;

);

A_Dome_Tips_SPC = Expr(

//大 Dome 获取最大值和最小值

L_FAI1_Max = Col Maximum(:SPC A);
L_FAI1_Min = Col Minimum(:SPC A);

L_FAI3_Max = Col Maximum(:SPC C);
L_FAI3_Min = Col Minimum(:SPC C);

L_Offset_Max = Col Maximum( :SPC G);

//大 Dome 规格判断

//FAI1
If(
	L_FAI1_Max > L_USL_FAI_1,
	L_FAI1_H = "SPC A High 最大值：" ||  Char(L_FAI1_Max),
	L_FAI1_H = "OK",
);

If(
	L_FAI1_Min < L_LSL_FAI_1,
	L_FAI1_L = "SPC A Low 最小值：" ||  Char(L_FAI1_Min),
	L_FAI1_L = "OK",
);

//FAI3
If(
	L_FAI3_Max > L_USL_FAI_3,
	L_FAI3_H = "SPC C High 最大值：" ||  Char(L_FAI3_Max),
	L_FAI3_H = "OK",
);

If(
	L_FAI3_Min < L_LSL_FAI_3,
	L_FAI3_L = "SPC C Low 最小值：" ||  Char(L_FAI3_Min),
	L_FAI3_L = "OK",
);

//Offset
If(
	L_Offset_Max > L_USL_Offset,
	L_Offset_H = "SPC G High 最大值：" ||  Char(L_Offset_Max),
	L_Offset_H = "OK",
);

win = New Window( "重要提醒！",
    <<Modal,
    Text Box( 
		Char(L_FAI1_H) || "\!N" || Char(L_FAI1_L) || "\!N" ||
    	Char(L_FAI3_H) ||  "\!N" || Char(L_FAI3_L) || "\!N" ||
    	Char(L_Offset_H)
    ),
    Button Box( "确定" ),);
    
);

//A_Dome 拉图
A_Dome_SPC =  Expr(

//判断是否有表存在，不存在停止运行！
If( 
	N Table() == 0, win = New Window( "错误提示",
    <<Modal,
    Text Box( "未打开数据表！停止\!n生成图形！" ),
    Button Box( "OK" ),);
	Stop();
	);
	
  A_Dome_Graph = Graph Builder(
	Size( 1155, 660 ),
	Variables( Y( :SPC A ), Y( :SPC C ), Y( :SPC G ) ),
	Elements(
		Position( 1, 1 ),
		Points( Y, Legend( 5 ) ),
		Caption Box( Y, Legend( 8 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 11 ), Summary Statistic( "Min" ) )
	),
	Elements(
		Position( 1, 2 ),
		Points( Y, Legend( 6 ) ),
		Caption Box( Y, Legend( 9 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 12 ), Summary Statistic( "Min" ) )
	),
	Elements(
		Position( 1, 3 ),
		Points( Y, Legend( 7 ) ),
		Formula( Y, Legend( 10 ) ),
		Formula( Y, Legend( 13 ) ),
		Caption Box( Y, Legend( 14 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 15 ), Summary Statistic( "Min" ) )
	),
	SendToReport(
		Dispatch(
			{},
			"SPC A",
			ScaleBox,
			{Min( 1.85 ), Max( 1.95 ), Inc( 0.01 ), Minor Ticks( 0 ),
			Add Ref Line( 1.86, "Solid", "Medium Dark Blue", "LCL 1.86", 1 ),
			Add Ref Line( 1.94, "Solid", "Medium Dark Red", "UCL 1.94", 1 )}
		),
		Dispatch(
			{},
			"SPC C",
			ScaleBox,
			{Min( 0.51 ), Max( 0.59 ), Inc( 0.01 ), Minor Ticks( 0 ),
			Add Ref Line( 0.52, "Solid", "Medium Dark Blue", "LCL 0.52", 1 ),
			Add Ref Line( 0.58, "Solid", "Medium Dark Red", "UCL 0.58", 1 )}
		),
		Dispatch(
			{},
			"SPC G",
			ScaleBox,
			{Min( 0.00267542132022413 ), Max( 0.0854262862231422 ), Inc( 0.01 ),
			Minor Ticks( 0 ), Add Ref Line(
				0.08, "Solid", "Medium Dark Red", "UCL 0.08", 1
			)}
		),
		Dispatch( {}, "graph title", TextEditBox, {Set Text( "A Dome SPC" )} )
	)
);

//最大化图形窗口，并设置为顶级窗口。
 A_Dome_Graph << Maximize Window;
 A_Dome_Graph << Bring Window To Front;
 
 );
 
 
 Import_Data_BDome_SPC  = Expr(
 
// B Dome 测试日期
Test_DateB = Test_Date_BoxB << Get Text();
// B Dome 测试时间
Test_TimeB = Test_Time_BoxB << Get Text();
// B Dome 机台编号
Machine_B = Machine_BoxB << Get Text();
//B Dome 模号
Tool_B = Tool_BoxB << Get Text();

//判断桌面是否有  21021_IPQC_Data  文件
IPQC_Data_Dir = Is Directory("$Desktop\21021_IPQC_Data_source");
//如果没有就创建一个 21021_IPQC_Data  文件夹
if (IPQC_Data_Dir  == 0,
Create Directory("$Desktop\21021_IPQC_Data_source" ));
//设置桌面 JMP 文件夹为默认目录
Path = Set Default Directory("$Desktop\21021_IPQC_Data_source");

//批量导入需要合并的文件，默认参数，JMP 自动推导，可手动配置参数。
mfi = Multiple File Import();
//设置导入目录
mfi << Set Folder(Path);
//设置导入的编码为中文字体
mfi<<Set Charset( "gb2312" );
//批量导入
mfi << Import Data();

//获取已经开的所有表数量
open_tables = N Table();

//判断数据是否合并为 1 个，如果不是说明数据格式一致。
//如果合并发现多余2个表弹窗提醒并停止下面代码继续执行。
if (open_tables>1,
    win = New Window( "错误提示",
    <<Modal,
    Text Box( "请检查数据\!r数据格式不一致" ),
    Button Box( "OK" ),);
    Stop(),
);

//导入后定义当前活动表为 datatable
dt = Current Data Table();

//判断有没有活动表,如果没有停止运行
if (
	Is Empty(dt),
	win = New Window( "错误提示",
    <<Modal,
    Text Box( "桌面  21021_IPQC_Data_source 文件夹\!n为空请检查文件！" ),
    Button Box( "OK" ),);
	Stop();
);

//删除前三行
//dt << Select Rows( [1, 2, 3] );
 dt << Select Where( :项目 == "规格上限" | :项目 == "规格下限" | :项目 == "目标值" );
dt << Delete Rows();

//改名并删除数据表的脚本
dt << Set name("21021 IPQC Dome Dim Data");
Script_list = dt << Get Table Script Names;
dt << Delete Scripts( Script_list );

//删除第一列
dt << Delete Columns(1);

//新建 8 列存放数据
dt = Current Data Table();
colsnum = 8;
For( i = 1, i <= colsnum, i++,
	New Column( Char( i ), Character, "Nominal",Set Selected )
);

//移动 1-8 列到最前面
dt << Move Selected Columns(
	{:"1"n, :"2"n, :"3"n, :"4"n, :"5"n, :"6"n, :"7"n, :"8"n},
	To First
);

//新建一列数字列，用于存放 SPC G
 dt << New Column( "9",Numeric,"Continuous",);
 
//重命名列名称
NewCols = {"Test Date", "Test Time", "Dome Type", "Equipment_Number",
    "Tool","Slide","Block","Cavity","SPC A","SPC C","FAI 7-1","FAI 7-2","SPC G"
};
//循环改列名
For( i = 1, i <= N Items( NewCols ), i++,
 Column( dt, i ) << set name( NewCols[i] )
);

//写入小 Dome 测试日期
dt:Test Date << Set Each Value(Test_DateB);
//写入小 Dome 测试时间
dt:Test Time << Set Each Value(Test_TimeB);
//写入小 Dome Type
dt:Dome Type << Set Each Value("21021B");
//写入小 Dome 机台编号
dt:Equipment_Number << Set Each Value(Machine_B);
//写入小 Dome 摸具编号
dt:Tool << Set Each Value(Tool_B);
//写入小 Dome Block 信息 24 行
Block_Area = Repeat( {"A","B","C","D"}, 6 );
Block_Area = Sort List(Block_Area);
dt:Block << Set  Values(	Block_Area);
//写入小 Dome CAV 24 行
CAV_Area = Repeat( {"CAV 014","CAV 088","CAV 181","CAV 202","CAV 276","CAV 370"}, 4 );
dt:Cavity << Set  Values(CAV_Area);
//设置 SPC G 公式
dt:SPC G << Set Formula(
	Round( Abs( :"FAI 7-1"n - :"FAI 7-2"n ), 4 )
);

//清除列选择状态
dt << Clear Column Selection();

//运行 B_Dom_SPC 图形脚本
B_Dome_SPC;

//保存 B_Dome 报表
//Save_B_Dome_Force;

//B_Dome_SPC 判断是否超规
B_Dome_Tips_SPC;

);

B_Dome_Tips_SPC = Expr(

//小 Dome 获取最大值和最小值

S_FAI1_Max = Col Maximum(:SPC A);
S_FAI1_Min = Col Minimum(:SPC A);

S_FAI3_Max = Col Maximum(:SPC C);
S_FAI3_Min = Col Minimum(:SPC C);

S_Offset_Max = Col Maximum( :SPC G);

//小 Dome 规格判断


//判断 B-X SPC

If(Tool_B == "21021BX",
	S_LSL_FAI_3 = S_LSL_FAI_3_BX	
);


//FAI1
If(
	S_FAI1_Max > S_USL_FAI_1,
	S_FAI1_H = "SPC A High 最大值：" ||  Char(S_FAI1_Max),
	S_FAI1_H = "OK",
);

If(
	S_FAI1_Min < S_LSL_FAI_1,
	S_FAI1_L = "SPC A Low 最小值：" ||  Char(S_FAI1_Min),
	S_FAI1_L = "OK",
);

//FAI3
If(
	S_FAI3_Max > S_USL_FAI_3,
	S_FAI3_H = "SPC C High 最大值：" ||  Char(S_FAI3_Max),
	S_FAI3_H = "OK",
);

If(
	S_FAI3_Min < S_LSL_FAI_3,
	S_FAI3_L = "SPC C Low 最小值：" ||  Char(S_FAI3_Min),
	S_FAI3_L = "OK",
);

//Offset
If(
	S_Offset_Max > S_USL_Offset,
	S_Offset_H = "SPC G High 最大值：" ||  Char(S_Offset_Max),
	S_Offset_H = "OK",
);

win = New Window( "重要提醒！",
    <<Modal,
    Text Box( 
		Char(S_FAI1_H) || "\!N" || Char(S_FAI1_L) || "\!N" ||
    	Char(S_FAI3_H) ||  "\!N" || Char(S_FAI3_L) || "\!N" ||
    	Char(S_Offset_H)
    ),
    Button Box( "确定" ),);
    
);

 //B_Dome 拉图
B_Dome_SPC =  Expr(

//判断是否有表存在，不存在停止运行！
If( 
	N Table() == 0, win = New Window( "错误提示",
    <<Modal,
    Text Box( "未打开数据表！停止\!n生成图形！" ),
    Button Box( "OK" ),);
	Stop();
	);
	
  B_Dome_Graph = Graph Builder(
	Size( 1155, 660 ),
	Variables( Y( :SPC A ), Y( :SPC C ), Y( :SPC G ) ),
	Elements(
		Position( 1, 1 ),
		Points( Y, Legend( 5 ) ),
		Caption Box( Y, Legend( 8 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 11 ), Summary Statistic( "Min" ) )
	),
	Elements(
		Position( 1, 2 ),
		Points( Y, Legend( 6 ) ),
		Caption Box( Y, Legend( 9 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 12 ), Summary Statistic( "Min" ) )
	),
	Elements(
		Position( 1, 3 ),
		Points( Y, Legend( 7 ) ),
		Formula( Y, Legend( 10 ) ),
		Formula( Y, Legend( 13 ) ),
		Caption Box( Y, Legend( 14 ), Summary Statistic( "Max" ) ),
		Caption Box( Y, Legend( 15 ), Summary Statistic( "Min" ) )
	),
	SendToReport(
		Dispatch(
			{},
			"SPC A",
			ScaleBox,
			{Min( 1.85 ), Max( 1.95 ), Inc( 0.01 ), Minor Ticks( 0 ),
			Add Ref Line( 1.86, "Solid", "Medium Dark Blue", "LCL 1.86", 1 ),
			Add Ref Line( 1.94, "Solid", "Medium Dark Red", "UCL 1.94", 1 )}
		),
		Dispatch(
			{},
			"SPC C",
			ScaleBox,
			{Min( 0.54 ), Max( 0.62 ), Inc( 0.01 ), Minor Ticks( 0 ),
			Add Ref Line( 0.55, "Solid", "Medium Dark Blue", "LCL 0.55", 1 ),
			Add Ref Line( 0.61, "Solid", "Medium Dark Red", "UCL 0.61", 1 )}
		),
		Dispatch(
			{},
			"SPC G",
			ScaleBox,
			{Min( 0.00267542132022413 ), Max( 0.0854262862231422 ), Inc( 0.01 ),
			Minor Ticks( 0 ), Add Ref Line(
				0.08, "Solid", "Medium Dark Red", "UCL 0.08", 1
			)}
		),
		Dispatch( {}, "graph title", TextEditBox, {Set Text( "B Dome SPC" )} )
	)
);

//最大化图形窗口，并设置为顶级窗口。
 B_Dome_Graph << Maximize Window;
 B_Dome_Graph << Bring Window To Front;
 
 );
 

 //查看规格表是否引用成功
Show( Spectext );